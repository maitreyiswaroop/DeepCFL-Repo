f_xy
Parameter containing:
tensor([[-7.8727e-02, -1.1448e-01,  5.4065e-01,  4.1166e-01,  5.8283e-01,
         -2.4351e-01, -1.2333e-01, -1.0492e-01, -9.7536e-03,  1.0304e+00],
        [ 8.1295e-01, -6.5293e-02, -2.5088e-02, -4.9452e-03,  4.0298e-02,
         -1.0047e-01, -4.1553e-02, -5.7512e-02,  6.5011e-01, -3.1805e-02],
        [-2.3613e-02, -3.4902e-02,  2.4731e-02, -2.7221e-02,  6.1386e-02,
         -3.5190e-02,  1.2296e+00, -2.8809e-02,  1.1639e-02,  3.1074e-02],
        [ 1.0376e-02,  6.3319e-03,  1.9157e-02,  1.0871e-02,  2.5233e-02,
          3.8678e-01,  1.9206e-03,  3.8025e-03,  1.8118e-02,  2.4857e-02],
        [ 2.8571e-01, -3.6758e-02,  6.0952e-03,  7.4619e-01,  3.8690e-02,
         -7.8109e-02, -3.7639e-02, -5.1316e-02,  2.4149e-01, -5.3621e-02],
        [-1.8636e-02,  1.2495e+00,  3.3016e-01, -5.8904e-02,  1.3787e-01,
         -1.0557e-01, -4.1558e-02, -7.6125e-02,  1.9909e-02, -8.3159e-02],
        [-8.4915e-03, -3.2778e-02,  5.9785e-02, -5.8060e-02,  4.9985e-02,
         -7.8396e-02, -2.7762e-02,  1.2991e+00,  2.0955e-02,  1.6192e-02],
        [ 8.0677e-03,  4.7737e-03,  2.0499e-02,  1.4676e-02,  3.1012e-02,
          4.1069e-01,  5.7594e-03,  3.4021e-03,  1.4798e-02,  2.7595e-02],
        [ 1.0988e-02,  3.2354e-03,  1.6614e-02,  1.6787e-04,  2.8907e-02,
          4.3077e-01,  4.8583e-03,  9.9316e-04,  1.5497e-02,  3.8058e-02],
        [ 7.5223e-03,  3.8659e-03,  1.9577e-02,  8.3520e-03,  2.9688e-02,
          3.9293e-01,  2.4563e-03,  4.6778e-03,  1.7064e-02,  2.5019e-02]],
       requires_grad=True)
model
Combined_VAE(
  (AE_x): VAE(
    (encoder): Encoder(
      (conv): Sequential(
        (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU()
        (6): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU()
        (9): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (11): ReLU()
      )
      (fc): Sequential(
        (0): Flatten(start_dim=1, end_dim=-1)
        (1): Linear(in_features=1024, out_features=20, bias=True)
      )
    )
    (decoder): Decoder(
      (fc): Sequential(
        (0): Linear(in_features=10, out_features=1024, bias=True)
        (1): ReLU()
        (2): Unflatten(dim=1, unflattened_size=(256, 2, 2))
      )
      (conv): Sequential(
        (0): ConvTranspose2d(256, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): ConvTranspose2d(128, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU()
        (6): ConvTranspose2d(64, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
        (7): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU()
        (9): ConvTranspose2d(32, 1, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
        (10): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (softmax): Softmax(dim=1)
  )
  (AE_y): VAE(
    (encoder): Encoder(
      (conv): Sequential(
        (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU()
        (6): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU()
        (9): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (11): ReLU()
      )
      (fc): Sequential(
        (0): Flatten(start_dim=1, end_dim=-1)
        (1): Linear(in_features=1024, out_features=20, bias=True)
      )
    )
    (decoder): Decoder(
      (fc): Sequential(
        (0): Linear(in_features=10, out_features=1024, bias=True)
        (1): ReLU()
        (2): Unflatten(dim=1, unflattened_size=(256, 2, 2))
      )
      (conv): Sequential(
        (0): ConvTranspose2d(256, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): ConvTranspose2d(128, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU()
        (6): ConvTranspose2d(64, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
        (7): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU()
        (9): ConvTranspose2d(32, 1, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
        (10): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (softmax): Softmax(dim=1)
  )
  (f_xy): MLP(
    (layers): ModuleList(
      (0): Linear(in_features=10, out_features=10, bias=False)
    )
  )
)
